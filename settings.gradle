pluginManagement {
    repositories {
        gradlePluginPortal()

        maven { setUrl("https://repo.spring.io/milestone") } // Spring milestones
        maven { setUrl("https://repo.spring.io/snapshot") } // Spring snapshots
    }

    plugins {
        id("de.fayard.refreshVersions") version "0.51.0"
    }
}

plugins {
    id("de.fayard.refreshVersions")
}

rootProject.name = 'study'


include 'examples'
include 'examples'
include 'example'
include 'example:async-programming'
findProject(':example:async-programming')?.name = 'async-programming'
include 'practices'
include 'practices:mongo-chat'
findProject(':practices:mongo-chat')?.name = 'mongo-chat'
include 'practices:redis-webflux-image'
findProject(':practices:redis-webflux-image')?.name = 'redis-webflux-image'
include 'spring-reactive'
include 'spring-reactive:part1'
findProject(':spring-reactive:part1')?.name = 'part1'
include 'practices:completable-future'
findProject(':practices:completable-future')?.name = 'completable-future'
include 'practices:reactive-streams'
findProject(':practices:reactive-streams')?.name = 'reactive-streams'
include 'practices:selector'
findProject(':practices:selector')?.name = 'selector'
include 'practices:reactor-pattern'
findProject(':practices:reactor-pattern')?.name = 'reactor-pattern'
include 'practices:reactor'
findProject(':practices:reactor')?.name = 'reactor'
include 'practices:nio-server'
findProject(':practices:nio-server')?.name = 'nio-server'
include 'practices:selector'
findProject(':practices:selector')?.name = 'selector'

